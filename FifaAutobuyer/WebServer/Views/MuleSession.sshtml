@Master['MasterPage']
@Section['Content']
<div class="content-wrapper">
	<section class="content-header">
		<h1>Mule Session for @Model.MuleClient.DestinationFUTAccount.EMail</h1>
	</section>
	<section class="content">
		<div class="row">
			<section class="col-md-12">
				<div class="box box-info col-sm-1">
					<div class="box-header with-border">
						<h3 class="box-title">Mule</h3>
					</div>
					<div class="box-body table-responsive">
						<label>Destination Acount: @Model.MuleClient.DestinationFUTAccount.EMail</label><br>
						<label>Mulevolume: @Model.MuleClient.MuleVolume</label><br>
						<label>Minimum Coins on Account: @Model.MuleClient.MinimumCoinsOnAccount</label><br>
					</div>
					<div class="box-body table-responsive">
						@If.MuleClient.Muling
						<button type="submit" id="stopMule" name="stopMule" class="btn btn-info pull-right" onclick="stopMule();">Stop Muling</button>
						<button type="submit" id="startMule" name="startMule" disabled="true" class="btn btn-info pull-left" onclick="startMule();">Start Muling</button>
						@EndIf
						@IfNot.MuleClient.Muling
						<button type="submit" id="stopMule" name="stopMule" disabled="true" class="btn btn-info pull-right" onclick="stopMule();">Stop Muling</button>
						<button type="submit" id="startMule" name="startMule" class="btn btn-info pull-left" onclick="startMule();">Start Muling</button>
						@EndIf
					</div>
					<div class="box-footer">
						<table id="muleStatus" class="table table-bordered table-striped">
							<thead>
								<tr>
									<th width="15%">EMail</th>
									<th width="12%">Date</th>
									<th>Message</th>
								</tr>
							</thead>
							<tbody>
							</tbody>
						</table>
					</div>
				</div>
			</section>
		</div>
	</section>
</div>
<script>
	function displayMuleStatus() {
	    var email = getQueryVariable("email");
	    httpPost("/getmulestatus?email=" + email, "", function (req) {
	        $('#muleStatus tbody').html(req.responseText);
	    }
	    );
	}
	function startMule() {
	    var email = getQueryVariable("email");
	    httpPost("/startmulesession", "email=" + email, function (req) {
	        $("#stopMule").prop('disabled', false);
	        $("#startMule").prop('disabled', true);
	        window.setInterval(function () {
	            displayMuleStatus();
	        }, 3000);
	    }
	    );
	}
	function stopMule() {
	    var email = getQueryVariable("email");
	    httpPost("/stopmulesession", "email=" + email, function (req) {
	        $("stopMule").prop('disabled', true);
	        $("startMule").prop('disabled', false);
	    }
	    );
	}
	function getQueryVariable(variable) {
	    var query = window.location.search.substring(1);
	    var vars = query.split("&");
	    for (var i = 0; i < vars.length; i++) {
	        var pair = vars[i].split("=");
	        if (pair[0] == variable) {
	            return pair[1];
	        }
	    }
	}
	window.setInterval(function () {
	    displayMuleStatus();
	}, 3000);
	function httpPost(url, postdata, callback, async) {
	    function getXMLHttpRequest() {
	        if (window.XMLHttpRequest) {
	            return new window.XMLHttpRequest;
	        } else {
	            try {
	                return new ActiveXObject("MSXML2.XMLHTTP");
	            }
	            catch (ex) {
	                return null;
	            }
	        }
	    }
	
	    function handler() {
	        if (oReq.readyState == 4 /* complete */) {
	            callback(oReq);
	        }
	    }
	
	    var oReq = getXMLHttpRequest();
	
	    if (oReq != null) {
	        oReq.open("POST", url, (typeof async === "undefined") ? true : async);
	        oReq.onreadystatechange = handler;
	        oReq.send(postdata);
	    } else {
	        window.alert("AJAX (XMLHTTP) not supported.");
	    }
	
	}
</script>
@EndSection